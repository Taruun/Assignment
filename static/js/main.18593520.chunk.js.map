{"version":3,"sources":["components/Input.jsx","components/Main.jsx","components/App.jsx","Worker.jsx","index.jsx","assets/logo.svg"],"names":["StyledInput","styled","input","Container","div","Status","Input","type","placeholder","required","autocomplete","Form","form","LogoWrapper","Span","Sidebar","xs","md","src","logo","alt","style","paddingRight","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"ySAiBMA,EAAcC,IAAOC,MAAV,6XAoBXC,EAAYF,IAAOG,IAAV,kGAMTC,EAASJ,IAAOG,IAAV,4RAORJ,EAGAA,EAGAA,GAKWM,EA1DD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrB,OACE,kBAACL,EAAD,KACE,kBAACH,EAAD,CACEQ,YAAaA,GAAeA,EAC5BD,KAAMA,GAAc,OACpBE,UAAQ,EACRC,aAAa,QAEf,kBAACL,EAAD,QCyBAM,EAAOV,IAAOW,KAAV,6tBAqCJC,EAAcZ,IAAOG,IAAV,0PAmBXD,EAAYF,IAAOG,IAAV,omBAgCTU,EAAOb,IAAOG,IAAV,mZAkBKW,EAzIC,WACd,OACE,kBAAC,EAAD,CAAWC,GAAI,EAAGC,GAAI,GACpB,kBAACJ,EAAD,KACE,yBAAKK,IAAKC,IAAMC,IAAI,KAEpB,+DAC6B,6BAD7B,IACoC,4CAGtC,kBAACT,EAAD,KACE,4CACA,kBAAC,EAAD,CAAOH,YAAY,qBACnB,wBAAIa,MAAO,CAAEC,aAAc,UAA3B,YACA,kBAAC,EAAD,CAAOd,YAAY,uBAEnB,4CACA,kBAACM,EAAD,KACE,wCACA,2CACA,4CACA,6CACA,0CAGF,kDChBFX,EAAYF,IAAOG,IAAV,oYAsBAmB,EAjCH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,6BACE,gECGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,a,kBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.18593520.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = ({ type, placeholder }) => {\n  return (\n    <Container>\n      <StyledInput\n        placeholder={placeholder && placeholder}\n        type={type ? type : \"text\"}\n        required\n        autocomplete=\"off\"\n      />\n      <Status />\n    </Container>\n  );\n};\n\nconst StyledInput = styled.input`\n  border: solid;\n  border-color: #f2f2f2;\n  width: 80%;\n  max-width: 350px;\n  min-width: 250px;\n  height: 40px;\n\n  margin: 0.5rem 0;\n  background-color: #fff;\n  box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\n  border-radius: 8px;\n  padding: 0 1rem;\n  transition: all 0.2s ease-in;\n\n  &:hover {\n    transform: translateY(-3px);\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Status = styled.div`\n  height: 10px;\n  width: 10px;\n  background: #9d9d9d;\n  border-radius: 10px;\n  margin-left: 1rem;\n\n  ${StyledInput}:focus + & {\n    background: #ffa689;\n  }\n  ${StyledInput}:invalid + & {\n    background: #fe2f75;\n  }\n  ${StyledInput}:valid + & {\n    background: #70edb9;\n  }\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/logo.svg\";\n\nimport Input from \"./Input\";\n\nconst Sidebar = () => {\n  return (\n    <Container xs={4} md={8}>\n      <LogoWrapper>\n        <img src={logo} alt=\"\" />\n\n        <h3>\n          Itâ€™s a delight to have you <br /> <span>onboard!</span>\n        </h3>\n      </LogoWrapper>\n      <Form>\n        <h3>Company Name</h3>\n        <Input placeholder=\"e.g. Example Inc\" />\n        <h3 style={{ paddingRight: \"15rem\" }}>Industry</h3>\n        <Input placeholder=\"e.g. Industry Type\" />\n\n        <h3>Company Size</h3>\n        <Span>\n          <button>1-20</button>\n          <button> 21-50 </button>\n          <button> 51-200 </button>\n          <button> 201-500 </button>\n          <button> 500+</button>\n        </Span>\n\n        <button>Get Started</button>\n      </Form>\n    </Container>\n  );\n};\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  h3 {\n    color: #808080;\n    font-weight: bold;\n    font-size: 100%;\n    padding-right: 12rem;\n    padding-top: 2%;\n    display: flex;\n  }\n\n  button {\n    width: 75%;\n    max-width: 350px;\n    min-width: 250px;\n    height: 40px;\n    border: none;\n    margin: 1rem 0;\n    padding-right: 3%;\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\n    border-radius: 8px;\n    background-color: #95e1d3;\n    color: #fff;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease-in;\n\n    &:hover {\n      transform: translateY(-3px);\n      background-color: #66bfbf;\n    }\n  }\n`;\n\nconst LogoWrapper = styled.div`\n  img {\n    height: 30px;\n    margin-left: 2rem;\n  }\n\n  h3 {\n    padding-top: 3%;\n    color: #7a86b6;\n    text-align: center;\n    font-size: 22px;\n  }\n\n  span {\n    color: #a8a4ce;\n    font-size: 22px;\n  }\n`;\n\nconst Container = styled.div`\n  min-width: 400px;\n  backdrop-filter: blur(35px);\n  background-color: rgba(234, 246, 246);\n  border-radius: 5%;\n  box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 0 5rem;\n\n  @media (max-width: 900px) {\n    width: 100vw;\n    position: absolute;\n    padding: 0;\n  }\n\n  h4 {\n    color: #808080;\n    font-weight: bold;\n    font-size: 13px;\n    margin-top: 2rem;\n\n    span {\n      color: #ff8d8d;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst Span = styled.div`\n  margin-left: 5%;\n  display: flex;\n  button {\n    align-item: center;\n    height: 2.5rem;\n    width: 5rem;\n    max-width: 70px;\n    min-width: 70px;\n    margin-right: 2%;\n    box-shadow: 0px 14px 9px -15px rgba(0, 0, 0, 0.25);\n    border-radius: 8px;\n    background-color: #95e1d3;\n    color: #fff;\n    cursor: pointer;\n    transition: all 0.2s ease-in;\n  }\n`;\nexport default Sidebar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Sidebar from \"./Main\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Sidebar />\n      <div>\n        <h4>Terms of Use | Privacy Policy</h4>\n      </div>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin-top: 2%;\n  margin-bottom: 5%;\n  margin-left: 32%;\n  margin-right: 33%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  h4 {\n    justify-content: center;\n    margin-left: 5rem;\n    color: #808080;\n    font-weight: bold;\n    font-size: 100%;\n    padding-right: 12.5%;\n    padding-top: 2%;\n    display: flex;\n  }\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./Worker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.900f5d2e.svg\";"],"sourceRoot":""}